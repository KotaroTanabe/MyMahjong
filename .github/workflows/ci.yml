# CI workflow for testing and deploying
name: CI

on:
  push:
    branches: [main]
  pull_request:

permissions:
  contents: write
  pull-requests: write
  pages: write
  id-token: write
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: pip install build
      - run: pip install -e ./core -e ./web -e ./cli
      - run: python -m build core
      - run: python -m build cli

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: pip install -e ./core -e ./web -e ./cli
      - run: pip install flake8 mypy pytest
      - run: flake8
      - run: mypy core web cli
      - run: pytest -q

  deploy:
    runs-on: ubuntu-latest
    needs: [build, test]
    if: |
      (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      (github.event_name == 'pull_request' && github.event.action == 'closed' &&
       github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main')
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci
        working-directory: web_gui
      - run: npm run build
        working-directory: web_gui
      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: web_gui/dist
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.GH_BOT_TOKEN }}
  auto-merge:
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    steps:
      - name: Create GitHub App token
        id: app-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
      - name: Approve PR
        run: gh pr review "$PR_URL" --approve
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          PR_URL: ${{ github.event.pull_request.html_url }}
      - name: Enable auto-merge
        run: gh pr merge --merge --auto "$PR_URL"
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          PR_URL: ${{ github.event.pull_request.html_url }}

